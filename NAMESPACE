useDynLib("oligo")

## Needed from splines
importFrom(splines, ns)

## Needed from affxparser
importFrom(affxparser, createCel, readCel, readCelHeader,
           readCelIntensities, updateCel)

## Needed from graphics
importFrom(graphics, boxplot, hist, image, lines, matplot, par, plot)
importFrom(grDevices, gray)

## Needed from utils
importFrom(utils, packageDescription, read.delim, read.table,
           setTxtProgressBar, txtProgressBar, write.table)

## Needed from methods
importClassesFrom(methods, array, matrix)
importFrom(methods, "@<-", is, new)

## Needed from stats
importFrom(stats, coef, cov, density, dnorm, fitted, kmeans, lm,
           lowess, mad, median, pchisq, quantile, residuals)

## Needed from DBI
importMethodsFrom(DBI, dbGetQuery)

## Needed from Biobase
importClassesFrom(Biobase, ExpressionSet)
importMethodsFrom(Biobase, annotatedDataFrameFrom, annotation,
                  "annotation<-", experimentData, exprs, featureData,
                  "featureData<-", featureNames, "featureNames<-",
                  "notes<-", pData, phenoData, "phenoData<-", preproc,
                  "preproc<-", rowMedians, sampleNames,
                  "sampleNames<-", varMetadata)
importFrom(Biobase, assayDataElement, assayDataElementReplace)

## Needed from affyio
import(affyio)

## Get everything from oligoClasses
import(oligoClasses)

## Exporting
exportMethods(boxplot, bg, "bg<-", bgSequence, db, exprs, getContainer,
              getPlatformDesign, getX, getY, hist, image, initialize,
              MAplot, mm, "mm<-", mmindex, mmSequence, pm, "pm<-",
              pmAllele, pmindex, pmFragmentLength, pmOffset, pmPosition,
              pmSequence, pmStrand, probeNames, rma)

## Exported functions
export(basecontent, cleanPlatformName, read.celfiles, read.xysfiles,
       sequenceDesignMatrix, list.xysfiles, readSummaries,
       getCrlmmSummaries, getNgsColorsInfo, read.xysfiles2,
       read.celfiles2, basicRMA)

## Exported functions for CRLMM
export(crlmm, snprma, justSNPRMA, justCRLMM, getPD)

## Testing
exportMethods(backgroundCorrect, normalize, summarize)
export(oligoProbesets, oligoSamples, setCluster, delCluster, getCluster)
importFrom(digest, digest)

## if ("bigmemory" %in% rownames(installed.packages())){
##   importFrom(bigmemory, attach.big.matrix, deepcopy, filebacked.big.matrix, big.matrix)
##   importMethodsFrom(bigmemory, describe, is.big.matrix)
## }
## if ("snow" %in% rownames(installed.packages())){
##   importFrom(snow, makeCluster, stopCluster, parLapply, clusterCall, clusterSplit)
## }
